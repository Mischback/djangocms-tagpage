"""
@file   admin.py
@brief  To make this accessible in backend

DjangoCMS provides a special PageExtensionAdmin class, which nicely integrates
into the default Django administration backend.

This is necessary to provide the (automatically generated by Django Admin)
functionality to create and edit the extension, which is used by the
CMSToolbar of DjangoCMS.
"""

# Django imports
from django.contrib import admin
# DjangoCMS imports
from cms.extensions import PageExtensionAdmin
# app imports
from .models import PageTags

class PageTagsAdmin(PageExtensionAdmin):
    """
    @class  PageTagsAdmin
    @brief  Provides the modified admin interface
    """
    list_display = ['extended_object']

    def is_draft_page(self, page):
        return page.extended_object.publisher_is_draft

# use this class as admin interface for PageTags
admin.site.register(PageTags, PageTagsAdmin)
